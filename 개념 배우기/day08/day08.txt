상속(inheritance)
	1. 기존에 사용중인 클래스(부모 클래스)의 필드가
	새롭게 만드는 클래스(자식 클래스)와 공통요소가 많다면
	재구현 하지 않고 상속을 해서 사용한다.
	마치 자신의 클래스에서 선언한 것처럼 사용할 수 있다.

	2. 

class A :
	A의 필드

class B(A):
	A,B의 필드

A : 부모 클래스, 상위 클래스, 슈퍼 클래스, 기반 클래스
B : 자식 클래스, 하위 클래스, 서브 클래스, 파생 클래스

	자식 클래스 타입의 객체는 부모 클래스 필드에도 접근할 수 있다.
	자식 생성자만 호출해서 객체를 만들기 때문에 자식 필드만
	메모리에 올라간다고 생각할 수 있지만 아니다. 자식 생성자를
	호출하면 부모 생성자가 자동으로 먼저 호출되고, 그 다음 자식 
	생성자가 호출되는 것이다. 따라서 자식 객체는 모든 필드에 
	접근할 수 있게 된다.

다형성(polymolpyism)
	다양한 형태를 가지는 성질

	오버라이딩(Overriding) : 재정의
		
		부모클래스에 a()라는 메소드가 선언되어 있는데
		그 메소드를 자식 클래스에서 같은 이름으로 다시 
		선언한다면, 똑같은 메소드가 두개 만들어지는 것이
		아니고, 기존의 부모 메소드 내용에 자식에서 새로
		선언한 내용이 덮어 씌워진다.

예외 처리

	에러 : 심각한 오류
	예외 : 덜 심각한 오류

try~except
	try:
		오류가 발생할 수 있는 문장
	except 예외클래스:
		오류 발생시 실행할 문장
	except 예외클래스 as 객체명:
		객체 활용 가능한 구역
	except 예외클래스, ... :
		여러 오류 발생시 실행할 문장

Exception : 모든 예외 클래스의 부모클래스
		무슨 오류가 발생할지 모를 때 사용해서 잡아낸다.

raise 예외클래스 : 예외 발생시키기






















