List
	1.저장공간이 여러번 선언할 때 list를 이용해서
	하나의 이름으로 관리한다.
	2.규칙성이 없는 값에 규칙성을 부여할 때 사용한다.

list 선언
	리스트명 = []
	리스트명 = list()
	리스트명 = [값1, 값2, 값3, ...]
	리스트명 = [초기값]*길이

단순하게 list 내부 확인하기
	print(리스트명)

	#결과
	#[값1, 값2, ...]

list 각 방에 접근하려면
	리스트명[인덱스]=값 ---->공간
	print(리스트명[인덱스]) -->값

list에 값 추가하기
	-리스트명.append(추가할 값) 	: 가장 마지막 방에 추가
	-리스트명.insert(인덱스, 추가할 값) 	: 인덱스방에 값을 넣고 
				          	그 뒤로는 한칸씩 밀어준다.

list 값 수정하기
	리스트명[인덱스] = 새로운값 	: 방에 새로운 값을 덮어 씌운다.

list 값 삭제
	리스트명.remove(값) 		: 해당하는 값이 있다면 앞에서부터 삭제
	리스트명.pop()			:리스트 맨 뒤의 값을 삭제
	del 리스트명[인덱스]		: 해당하는 방을 삭제
					(인덱스를 안쓰면 리스트 자체가 삭제됨.)
list 값 검색
	리스트명.index(값)			:해당하는 값이 있는 인덱스 반환
					통채로가 그 값이 존재하는 방번호
	값 in 리스트명			:값이 리스트안에 존재하면 True
					 없으면 False

list 정렬
	리스트명.sort()			:오름차순 정렬

list 뒤집기
	리스트명.reverse()			

list의 길이
	len(리스트명)			: 리스트의 길이 반환, 통채로가 길이값


random 모듈
	랜덤한 숫자 발생시킬때 사용
	import random
	random.randrange(시작값, 끝값)	: 시작값~끝값 전까지의 숫자중에 랜덤숫자 반환

2(다)차원 리스트
	리스트 안에 리스트
	리스트명[방번호]도 하나의 리스트
	각 값에 접근하기 위해서는 리스트명[행][열] 처럼
	두번 접근해서 가져와야 한다.

2(다)중 for문
	for문 안에 for문
	바깥쪽 i for문이 다음 반복으로 넘어가려면
	안쪽에 있는 j for문이 모두 종료되어야 한다.

	for i in range(2):
		for j in range(3):
			print("!!!")

	"!!!" 출력 총 6번

	("!!!" 출력 3번) 을 2번 반복










